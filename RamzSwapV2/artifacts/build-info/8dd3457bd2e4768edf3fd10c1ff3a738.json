{
	"id": "8dd3457bd2e4768edf3fd10c1ff3a738",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"RamzSwap V2/Ramz.sol": {
				"content": "pragma solidity =0.5.16;\n\ninterface IRamzSwapMAAL20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, 'ds-math-add-overflow');\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\n    }\n}\n\ncontract RamzSwapToken is IRamzSwapMAAL20 {\n    using SafeMath for uint;\n\n    string public constant name = 'RamzSwap';\n    string public constant symbol = 'RMZ';\n    uint8 public constant decimals = 18;\n    uint  public totalSupply;\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    constructor() public {\n        uint chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n                keccak256(bytes(name)),\n                keccak256(bytes('1')),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {\n        require(deadline >= block.timestamp, 'UniswapV2: EXPIRED');\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                '\\x19\\x01',\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE');\n        _approve(owner, spender, value);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"RamzSwap V2/Ramz.sol": {
				"IRamzSwapMAAL20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"RamzSwap V2/Ramz.sol\":\"IRamzSwapMAAL20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RamzSwap V2/Ramz.sol\":{\"keccak256\":\"0x3a20ece75da78d03adf220a4c6a9618f7adf6eaab91107f0fc16b1d636d68210\",\"urls\":[\"bzz-raw://96d86896bc01c6059d0d122ce7862e7b1a9550fb0781a2bdde8ecc33d4694e42\",\"dweb:/ipfs/QmdZg1YBU6xntGMKN6EAkahxXBWHHS4NAGLJMbQcEhsjtx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"RamzSwapToken": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"RamzSwap V2/Ramz.sol\":1687:5010  contract RamzSwapToken is IRamzSwapMAAL20 {... */\n  mstore(0x40, 0x80)\n    /* \"RamzSwap V2/Ramz.sol\":2495:2939  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"RamzSwap V2/Ramz.sol\":2678:2773  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n    /* \"RamzSwap V2/Ramz.sol\":2582:2589  chainid */\n  chainid\n  swap1\n    /* \"RamzSwap V2/Ramz.sol\":2678:2773  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"RamzSwap V2/Ramz.sol\":2807:2811  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x08\n  dup4\n  mstore\n  shl(0xc4, 0x052616d7a5377617)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"RamzSwap V2/Ramz.sol\":2841:2851  bytes('1') */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"RamzSwap V2/Ramz.sol\":2650:2922  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"RamzSwap V2/Ramz.sol\":2791:2813  keccak256(bytes(name)) */\n  0x0fdad714b9ded567f809e1228e3c4209948d0b55cf816b97124955a286699019\n    /* \"RamzSwap V2/Ramz.sol\":2650:2922  abi.encode(... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"RamzSwap V2/Ramz.sol\":2831:2852  keccak256(bytes('1')) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"RamzSwap V2/Ramz.sol\":2650:2922  abi.encode(... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"RamzSwap V2/Ramz.sol\":2903:2907  this */\n  address\n    /* \"RamzSwap V2/Ramz.sol\":2650:2922  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"RamzSwap V2/Ramz.sol\":2650:2922  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"RamzSwap V2/Ramz.sol\":2627:2932  keccak256(... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"RamzSwap V2/Ramz.sol\":2608:2624  DOMAIN_SEPARATOR */\n  0x03\n    /* \"RamzSwap V2/Ramz.sol\":2608:2932  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"RamzSwap V2/Ramz.sol\":1687:5010  contract RamzSwapToken is IRamzSwapMAAL20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"RamzSwap V2/Ramz.sol\":1687:5010  contract RamzSwapToken is IRamzSwapMAAL20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"RamzSwap V2/Ramz.sol\":1687:5010  contract RamzSwapToken is IRamzSwapMAAL20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"RamzSwap V2/Ramz.sol\":1765:1805  string public constant name = 'RamzSwap' */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"RamzSwap V2/Ramz.sol\":1765:1805  string public constant name = 'RamzSwap' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"RamzSwap V2/Ramz.sol\":3753:3897  function approve(address spender, uint value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":3753:3897  function approve(address spender, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_26\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"RamzSwap V2/Ramz.sol\":1895:1919  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"RamzSwap V2/Ramz.sol\":4045:4340  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":4045:4340  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"RamzSwap V2/Ramz.sol\":2181:2289  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_27\n      tag_33\n      jump\t// in\n        /* \"RamzSwap V2/Ramz.sol\":1854:1889  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"RamzSwap V2/Ramz.sol\":2040:2071  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_27\n      tag_37\n      jump\t// in\n        /* \"RamzSwap V2/Ramz.sol\":1925:1966  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"RamzSwap V2/Ramz.sol\":1925:1966  mapping(address => uint) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"RamzSwap V2/Ramz.sol\":2295:2333  mapping(address => uint) public nonces */\n    tag_11:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"RamzSwap V2/Ramz.sol\":2295:2333  mapping(address => uint) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"RamzSwap V2/Ramz.sol\":1811:1848  string public constant symbol = 'RMZ' */\n    tag_12:\n      tag_18\n      tag_45\n      jump\t// in\n        /* \"RamzSwap V2/Ramz.sol\":3903:4039  function transfer(address to, uint value) external returns (bool) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":3903:4039  function transfer(address to, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n        /* \"RamzSwap V2/Ramz.sol\":4346:5008  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":4346:5008  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"RamzSwap V2/Ramz.sol\":1972:2033  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":1972:2033  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_58\n      jump\t// in\n        /* \"RamzSwap V2/Ramz.sol\":1765:1805  string public constant name = 'RamzSwap' */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x08\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xc4, 0x052616d7a5377617)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":3753:3897  function approve(address spender, uint value) external returns (bool) {... */\n    tag_26:\n        /* \"RamzSwap V2/Ramz.sol\":3817:3821  bool */\n      0x00\n        /* \"RamzSwap V2/Ramz.sol\":3833:3869  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"RamzSwap V2/Ramz.sol\":3842:3852  msg.sender */\n      caller\n        /* \"RamzSwap V2/Ramz.sol\":3854:3861  spender */\n      dup5\n        /* \"RamzSwap V2/Ramz.sol\":3863:3868  value */\n      dup5\n        /* \"RamzSwap V2/Ramz.sol\":3833:3841  _approve */\n      tag_61\n        /* \"RamzSwap V2/Ramz.sol\":3833:3869  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n      pop\n        /* \"RamzSwap V2/Ramz.sol\":3886:3890  true */\n      0x01\n        /* \"RamzSwap V2/Ramz.sol\":3753:3897  function approve(address spender, uint value) external returns (bool) {... */\n    tag_59:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":1895:1919  uint  public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":4045:4340  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":4143:4158  allowance[from] */\n      dup4\n      and\n        /* \"RamzSwap V2/Ramz.sol\":4123:4127  bool */\n      0x00\n        /* \"RamzSwap V2/Ramz.sol\":4143:4158  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":4143:4152  allowance */\n      0x02\n        /* \"RamzSwap V2/Ramz.sol\":4143:4158  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":4159:4169  msg.sender */\n      caller\n        /* \"RamzSwap V2/Ramz.sol\":4143:4170  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"RamzSwap V2/Ramz.sol\":4143:4182  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"RamzSwap V2/Ramz.sol\":4139:4277  if (allowance[from][msg.sender] != uint(-1)) {... */\n      tag_63\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":4228:4243  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":4228:4237  allowance */\n      0x02\n        /* \"RamzSwap V2/Ramz.sol\":4228:4243  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":4244:4254  msg.sender */\n      caller\n        /* \"RamzSwap V2/Ramz.sol\":4228:4255  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"RamzSwap V2/Ramz.sol\":4228:4266  allowance[from][msg.sender].sub(value) */\n      tag_64\n      swap1\n        /* \"RamzSwap V2/Ramz.sol\":4260:4265  value */\n      dup4\n        /* \"RamzSwap V2/Ramz.sol\":4228:4266  allowance[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"RamzSwap V2/Ramz.sol\":4228:4259  allowance[from][msg.sender].sub */\n      tag_65\n        /* \"RamzSwap V2/Ramz.sol\":4228:4266  allowance[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":4198:4213  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":4198:4207  allowance */\n      0x02\n        /* \"RamzSwap V2/Ramz.sol\":4198:4213  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":4214:4224  msg.sender */\n      caller\n        /* \"RamzSwap V2/Ramz.sol\":4198:4225  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":4198:4266  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      sstore\n        /* \"RamzSwap V2/Ramz.sol\":4139:4277  if (allowance[from][msg.sender] != uint(-1)) {... */\n    tag_63:\n        /* \"RamzSwap V2/Ramz.sol\":4286:4312  _transfer(from, to, value) */\n      tag_66\n        /* \"RamzSwap V2/Ramz.sol\":4296:4300  from */\n      dup5\n        /* \"RamzSwap V2/Ramz.sol\":4302:4304  to */\n      dup5\n        /* \"RamzSwap V2/Ramz.sol\":4306:4311  value */\n      dup5\n        /* \"RamzSwap V2/Ramz.sol\":4286:4295  _transfer */\n      tag_67\n        /* \"RamzSwap V2/Ramz.sol\":4286:4312  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n      pop\n        /* \"RamzSwap V2/Ramz.sol\":4329:4333  true */\n      0x01\n        /* \"RamzSwap V2/Ramz.sol\":4045:4340  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":2181:2289  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"RamzSwap V2/Ramz.sol\":2223:2289  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"RamzSwap V2/Ramz.sol\":2181:2289  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      dup2\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":1854:1889  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"RamzSwap V2/Ramz.sol\":1887:1889  18 */\n      0x12\n        /* \"RamzSwap V2/Ramz.sol\":1854:1889  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":2040:2071  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":1925:1966  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":2295:2333  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":1811:1848  string public constant symbol = 'RMZ' */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe9, 0x2926ad)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":3903:4039  function transfer(address to, uint value) external returns (bool) {... */\n    tag_52:\n        /* \"RamzSwap V2/Ramz.sol\":3963:3967  bool */\n      0x00\n        /* \"RamzSwap V2/Ramz.sol\":3979:4011  _transfer(msg.sender, to, value) */\n      tag_60\n        /* \"RamzSwap V2/Ramz.sol\":3989:3999  msg.sender */\n      caller\n        /* \"RamzSwap V2/Ramz.sol\":4001:4003  to */\n      dup5\n        /* \"RamzSwap V2/Ramz.sol\":4005:4010  value */\n      dup5\n        /* \"RamzSwap V2/Ramz.sol\":3979:3988  _transfer */\n      tag_67\n        /* \"RamzSwap V2/Ramz.sol\":3979:4011  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"RamzSwap V2/Ramz.sol\":4346:5008  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n    tag_55:\n        /* \"RamzSwap V2/Ramz.sol\":4491:4506  block.timestamp */\n      timestamp\n        /* \"RamzSwap V2/Ramz.sol\":4479:4487  deadline */\n      dup5\n        /* \"RamzSwap V2/Ramz.sol\":4479:4506  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"RamzSwap V2/Ramz.sol\":4471:4529  require(deadline >= block.timestamp, 'UniswapV2: EXPIRED') */\n      tag_71\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x155b9a5cddd85c158c8e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_71:\n        /* \"RamzSwap V2/Ramz.sol\":4641:4657  DOMAIN_SEPARATOR */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":4736:4749  nonces[owner] */\n      dup1\n      dup10\n      and\n        /* \"RamzSwap V2/Ramz.sol\":4539:4553  bytes32 digest */\n      0x00\n        /* \"RamzSwap V2/Ramz.sol\":4736:4749  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":4736:4742  nonces */\n      0x04\n        /* \"RamzSwap V2/Ramz.sol\":4736:4749  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":4736:4751  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"RamzSwap V2/Ramz.sol\":4685:4762  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup3\n      mload\n        /* \"RamzSwap V2/Ramz.sol\":2223:2289  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"RamzSwap V2/Ramz.sol\":4685:4762  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup14\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup12\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":4685:4762  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":4675:4763  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"RamzSwap V2/Ramz.sol\":4579:4777  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":4579:4777  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":4556:4787  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":4824:4850  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup10\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup8\n      swap1\n      mstore\n      mload\n        /* \"RamzSwap V2/Ramz.sol\":4539:4553  bytes32 digest */\n      swap2\n      swap4\n        /* \"RamzSwap V2/Ramz.sol\":4736:4751  nonces[owner]++ */\n      swap3\n        /* \"RamzSwap V2/Ramz.sol\":4824:4850  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"RamzSwap V2/Ramz.sol\":4736:4751  nonces[owner]++ */\n      dup6\n        /* \"RamzSwap V2/Ramz.sol\":4824:4850  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_72\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_72:\n      pop\n      pop\n        /* \"RamzSwap V2/Ramz.sol\":4824:4850  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":4868:4898  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"RamzSwap V2/Ramz.sol\":4868:4927  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_73\n      jumpi\n      pop\n        /* \"RamzSwap V2/Ramz.sol\":4922:4927  owner */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":4902:4927  recoveredAddress == owner */\n      and\n        /* \"RamzSwap V2/Ramz.sol\":4902:4918  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":4902:4927  recoveredAddress == owner */\n      and\n      eq\n        /* \"RamzSwap V2/Ramz.sol\":4868:4927  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_73:\n        /* \"RamzSwap V2/Ramz.sol\":4860:4960  require(recoveredAddress != address(0) && recoveredAddress == owner, 'UniswapV2: INVALID_SIGNATURE') */\n      tag_74\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x556e697377617056323a20494e56414c49445f5349474e415455524500000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_74:\n        /* \"RamzSwap V2/Ramz.sol\":4970:5001  _approve(owner, spender, value) */\n      tag_75\n        /* \"RamzSwap V2/Ramz.sol\":4979:4984  owner */\n      dup10\n        /* \"RamzSwap V2/Ramz.sol\":4986:4993  spender */\n      dup10\n        /* \"RamzSwap V2/Ramz.sol\":4995:5000  value */\n      dup10\n        /* \"RamzSwap V2/Ramz.sol\":4970:4978  _approve */\n      tag_61\n        /* \"RamzSwap V2/Ramz.sol\":4970:5001  _approve(owner, spender, value) */\n      jump\t// in\n    tag_75:\n        /* \"RamzSwap V2/Ramz.sol\":4346:5008  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":1972:2033  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":3359:3525  function _approve(address owner, address spender, uint value) private {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":3439:3455  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":3439:3448  allowance */\n      0x02\n        /* \"RamzSwap V2/Ramz.sol\":3439:3455  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":3439:3464  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":3439:3472  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"RamzSwap V2/Ramz.sol\":3487:3518  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"RamzSwap V2/Ramz.sol\":3359:3525  function _approve(address owner, address spender, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":1410:1537  function sub(uint x, uint y) internal pure returns (uint z) {... */\n    tag_65:\n        /* \"RamzSwap V2/Ramz.sol\":1493:1498  x - y */\n      dup1\n      dup3\n      sub\n        /* \"RamzSwap V2/Ramz.sol\":1488:1504  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"RamzSwap V2/Ramz.sol\":1480:1530  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"RamzSwap V2/Ramz.sol\":3531:3747  function _transfer(address from, address to, uint value) private {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":3624:3639  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":3624:3633  balanceOf */\n      0x01\n        /* \"RamzSwap V2/Ramz.sol\":3624:3639  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"RamzSwap V2/Ramz.sol\":3624:3650  balanceOf[from].sub(value) */\n      tag_80\n      swap1\n        /* \"RamzSwap V2/Ramz.sol\":3644:3649  value */\n      dup3\n        /* \"RamzSwap V2/Ramz.sol\":3624:3650  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"RamzSwap V2/Ramz.sol\":3624:3643  balanceOf[from].sub */\n      tag_65\n        /* \"RamzSwap V2/Ramz.sol\":3624:3650  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":3606:3621  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":3606:3615  balanceOf */\n      0x01\n        /* \"RamzSwap V2/Ramz.sol\":3606:3621  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":3606:3650  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"RamzSwap V2/Ramz.sol\":3676:3689  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"RamzSwap V2/Ramz.sol\":3676:3700  balanceOf[to].add(value) */\n      tag_81\n      swap1\n        /* \"RamzSwap V2/Ramz.sol\":3694:3699  value */\n      dup3\n        /* \"RamzSwap V2/Ramz.sol\":3676:3700  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"RamzSwap V2/Ramz.sol\":3676:3693  balanceOf[to].add */\n      tag_82\n        /* \"RamzSwap V2/Ramz.sol\":3676:3700  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"RamzSwap V2/Ramz.sol\":3660:3673  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"RamzSwap V2/Ramz.sol\":3660:3669  balanceOf */\n      0x01\n        /* \"RamzSwap V2/Ramz.sol\":3660:3673  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"RamzSwap V2/Ramz.sol\":3660:3700  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"RamzSwap V2/Ramz.sol\":3715:3740  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"RamzSwap V2/Ramz.sol\":3660:3673  balanceOf[to] */\n      swap2\n      swap4\n        /* \"RamzSwap V2/Ramz.sol\":3715:3740  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"RamzSwap V2/Ramz.sol\":3531:3747  function _transfer(address from, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"RamzSwap V2/Ramz.sol\":1278:1404  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_82:\n        /* \"RamzSwap V2/Ramz.sol\":1361:1366  x + y */\n      dup1\n      dup3\n      add\n        /* \"RamzSwap V2/Ramz.sol\":1356:1372  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"RamzSwap V2/Ramz.sol\":1348:1397  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n\n    auxdata: 0xa265627a7a7231582074f1f8e30194987ca530928d784062b1af319712f46511a2850ac56bae3bda6d64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051469080605261096582396040805191829003605201822082820182526008835267052616d7a537761760c41b6020938401528151808301835260018152603160f81b908401528151808401919091527f0fdad714b9ded567f809e1228e3c4209948d0b55cf816b97124955a286699019818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c09094019052825192019190912060035550610879806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610334565b604080519115158252519081900360200190f35b61019961034b565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610351565b6101996103eb565b6101f161040f565b6040805160ff9092168252519081900360200190f35b610199610414565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041a565b6101996004803603602081101561024b57600080fd5b50356001600160a01b031661042c565b6100dc61043e565b61017d6004803603604081101561027957600080fd5b506001600160a01b03813516906020013561045d565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561046a565b005b610199600480360360408110156102f857600080fd5b506001600160a01b038135811691602001351661066c565b60405180604001604052806008815260200167052616d7a537761760c41b81525081565b6000610341338484610689565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103d6576001600160a01b03841660009081526002602090815260408083203384529091529020546103b1908363ffffffff6106eb16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e184848461073b565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b604051806040016040528060038152602001622926ad60e91b81525081565b600061034133848461073b565b428410156104b4576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106055750886001600160a01b0316816001600160a01b0316145b610656576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b610661898989610689565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610345576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054610764908263ffffffff6106eb16565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610799908263ffffffff6107f516565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610345576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a7231582074f1f8e30194987ca530928d784062b1af319712f46511a2850ac56bae3bda6d64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x965 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x8 DUP4 MSTORE PUSH8 0x52616D7A5377617 PUSH1 0xC4 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFDAD714B9DED567F809E1228E3C4209948D0B55CF816B97124955A286699019 DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SSTORE POP PUSH2 0x879 DUP1 PUSH2 0xEC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x351 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x414 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41A JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42C JUMP JUMPDEST PUSH2 0xDC PUSH2 0x43E JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x46A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x52616D7A5377617 PUSH1 0xC4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341 CALLER DUP5 DUP5 PUSH2 0x689 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6EB AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E1 DUP5 DUP5 DUP5 PUSH2 0x73B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2926AD PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341 CALLER DUP5 DUP5 PUSH2 0x73B JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x605 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x661 DUP10 DUP10 DUP10 PUSH2 0x689 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x345 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x6EB AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x799 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7F5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH21 0xF1F8E30194987CA530928D784062B1AF319712F465 GT LOG2 DUP6 EXP 0xC5 PUSH12 0xAE3BDA6D64736F6C63430005 LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "1687:3323:0:-;;;2495:444;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2678:95:0;;2582:7;;2678:95;;;;;;;;;;;;;;;;2807:4;;;;;;;;-1:-1:-1;;;2807:4:0;;;;;2841:10;;;;;;;;;;-1:-1:-1;;;2841:10:0;;;;2650:272;;;;;;;;;2791:22;2650:272;;;;2831:21;2650:272;;;;;;;;;;;2903:4;2650:272;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;2650:272:0;;;;;;2627:305;;;;;;;;2608:16;:324;-1:-1:-1;1687:3323:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610334565b604080519115158252519081900360200190f35b61019961034b565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610351565b6101996103eb565b6101f161040f565b6040805160ff9092168252519081900360200190f35b610199610414565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041a565b6101996004803603602081101561024b57600080fd5b50356001600160a01b031661042c565b6100dc61043e565b61017d6004803603604081101561027957600080fd5b506001600160a01b03813516906020013561045d565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561046a565b005b610199600480360360408110156102f857600080fd5b506001600160a01b038135811691602001351661066c565b60405180604001604052806008815260200167052616d7a537761760c41b81525081565b6000610341338484610689565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103d6576001600160a01b03841660009081526002602090815260408083203384529091529020546103b1908363ffffffff6106eb16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e184848461073b565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b604051806040016040528060038152602001622926ad60e91b81525081565b600061034133848461073b565b428410156104b4576040805162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa1580156105cf573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106055750886001600160a01b0316816001600160a01b0316145b610656576040805162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b610661898989610689565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b80820382811115610345576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054610764908263ffffffff6106eb16565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610799908263ffffffff6107f516565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b80820182811015610345576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfea265627a7a7231582074f1f8e30194987ca530928d784062b1af319712f46511a2850ac56bae3bda6d64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x334 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x351 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x40F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x414 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41A JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x42C JUMP JUMPDEST PUSH2 0xDC PUSH2 0x43E JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x45D JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x46A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x66C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x52616D7A5377617 PUSH1 0xC4 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341 CALLER DUP5 DUP5 PUSH2 0x689 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3D6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B1 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x6EB AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E1 DUP5 DUP5 DUP5 PUSH2 0x73B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x2926AD PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x341 CALLER DUP5 DUP5 PUSH2 0x73B JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0x4B4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x155B9A5CDDD85C158C8E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP14 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP13 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP12 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP10 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP9 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP8 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x605 JUMPI POP DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617056323A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x661 DUP10 DUP10 DUP10 PUSH2 0x689 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x345 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x6EB AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x799 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7F5 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH21 0xF1F8E30194987CA530928D784062B1AF319712F465 GT LOG2 DUP6 EXP 0xC5 PUSH12 0xAE3BDA6D64736F6C63430005 LT STOP ORIGIN ",
							"sourceMap": "1687:3323:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1687:3323:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1765:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1765:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3753:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3753:144:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1895:24;;;:::i;:::-;;;;;;;;;;;;;;;;4045:295;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4045:295:0;;;;;;;;;;;;;;;;;:::i;2181:108::-;;;:::i;1854:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2040:31;;;:::i;1925:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1925:41:0;-1:-1:-1;;;;;1925:41:0;;:::i;2295:38::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2295:38:0;-1:-1:-1;;;;;2295:38:0;;:::i;1811:37::-;;;:::i;3903:136::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3903:136:0;;;;;;;;:::i;4346:662::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;4346:662:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1972:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1972:61:0;;;;;;;;;;:::i;1765:40::-;;;;;;;;;;;;;;-1:-1:-1;;;1765:40:0;;;;:::o;3753:144::-;3817:4;3833:36;3842:10;3854:7;3863:5;3833:8;:36::i;:::-;-1:-1:-1;3886:4:0;3753:144;;;;;:::o;1895:24::-;;;;:::o;4045:295::-;-1:-1:-1;;;;;4143:15:0;;4123:4;4143:15;;;:9;:15;;;;;;;;4159:10;4143:27;;;;;;;;-1:-1:-1;;4143:39:0;4139:138;;-1:-1:-1;;;;;4228:15:0;;;;;;:9;:15;;;;;;;;4244:10;4228:27;;;;;;;;:38;;4260:5;4228:38;:31;:38;:::i;:::-;-1:-1:-1;;;;;4198:15:0;;;;;;:9;:15;;;;;;;;4214:10;4198:27;;;;;;;:68;4139:138;4286:26;4296:4;4302:2;4306:5;4286:9;:26::i;:::-;-1:-1:-1;4329:4:0;4045:295;;;;;:::o;2181:108::-;2223:66;2181:108;:::o;1854:35::-;1887:2;1854:35;:::o;2040:31::-;;;;:::o;1925:41::-;;;;;;;;;;;;;:::o;2295:38::-;;;;;;;;;;;;;:::o;1811:37::-;;;;;;;;;;;;;;-1:-1:-1;;;1811:37:0;;;;:::o;3903:136::-;3963:4;3979:32;3989:10;4001:2;4005:5;3979:9;:32::i;4346:662::-;4491:15;4479:8;:27;;4471:58;;;;;-1:-1:-1;;;4471:58:0;;;;;;;;;;;;-1:-1:-1;;;4471:58:0;;;;;;;;;;;;;;;4641:16;;-1:-1:-1;;;;;4736:13:0;;;4539:14;4736:13;;;:6;:13;;;;;;;;:15;;;;;;;;;4685:77;;2223:66;4685:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;4685:77:0;;;;;4675:88;;;;;;-1:-1:-1;;;4579:198:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;4579:198:0;;;;;;4556:231;;;;;;;;;4824:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4539:14;;4736:15;4824:26;;;;;-1:-1:-1;;4824:26:0;;;;;;;;;;4736:15;4824:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;4824:26:0;;-1:-1:-1;;4824:26:0;;;-1:-1:-1;;;;;;;4868:30:0;;;;;;:59;;;4922:5;-1:-1:-1;;;;;4902:25:0;:16;-1:-1:-1;;;;;4902:25:0;;4868:59;4860:100;;;;;-1:-1:-1;;;4860:100:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4970:31;4979:5;4986:7;4995:5;4970:8;:31::i;:::-;4346:662;;;;;;;;;:::o;1972:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;3359:166::-;-1:-1:-1;;;;;3439:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;3487:31;;;;;;;;;;;;;;;;;3359:166;;;:::o;1410:127::-;1493:5;;;1488:16;;;;1480:50;;;;;-1:-1:-1;;;1480:50:0;;;;;;;;;;;;-1:-1:-1;;;1480:50:0;;;;;;;;;;;;;;3531:216;-1:-1:-1;;;;;3624:15:0;;;;;;:9;:15;;;;;;:26;;3644:5;3624:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;3606:15:0;;;;;;;:9;:15;;;;;;:44;;;;3676:13;;;;;;;:24;;3694:5;3676:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;3660:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;3715:25;;;;;;;3660:13;;3715:25;;;;;;;;;;;;;3531:216;;;:::o;1278:126::-;1361:5;;;1356:16;;;;1348:49;;;;;-1:-1:-1;;;1348:49:0;;;;;;;;;;;;-1:-1:-1;;;1348:49:0;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "433800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1021",
								"PERMIT_TYPEHASH()": "287",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22343",
								"balanceOf(address)": "1169",
								"decimals()": "318",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1687,
									"end": 5010,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1687,
									"end": 5010,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1687,
									"end": 5010,
									"name": "MSTORE"
								},
								{
									"begin": 2495,
									"end": 2939,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "MLOAD"
								},
								{
									"begin": 2582,
									"end": 2589,
									"name": "CHAINID"
								},
								{
									"begin": 2582,
									"end": 2589,
									"name": "SWAP1"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "DUP1"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "DUP3"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "CODECOPY"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "DUP1"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "MLOAD"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "SWAP2"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "DUP3"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "SWAP1"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "SUB"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "ADD"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "DUP3"
								},
								{
									"begin": 2678,
									"end": 2773,
									"name": "KECCAK256"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "DUP3"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "DUP3"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "ADD"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "DUP3"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "MSTORE"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "PUSH",
									"value": "8"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "DUP4"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "52616D7A5377617"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "C4"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "SWAP4"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "DUP5"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "ADD"
								},
								{
									"begin": 2807,
									"end": 2811,
									"name": "MSTORE"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "DUP2"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "MLOAD"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "DUP1"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "DUP4"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "ADD"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "DUP4"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "MSTORE"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "DUP2"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "SWAP1"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "DUP5"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "ADD"
								},
								{
									"begin": 2841,
									"end": 2851,
									"name": "MSTORE"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP2"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "MLOAD"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP1"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP5"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "ADD"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP2"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP1"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP2"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "MSTORE"
								},
								{
									"begin": 2791,
									"end": 2813,
									"name": "PUSH",
									"value": "FDAD714B9DED567F809E1228E3C4209948D0B55CF816B97124955A286699019"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP2"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP4"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "ADD"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "MSTORE"
								},
								{
									"begin": 2831,
									"end": 2852,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP3"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "ADD"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "MSTORE"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP2"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "ADD"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP5"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP1"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP5"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "MSTORE"
								},
								{
									"begin": 2903,
									"end": 2907,
									"name": "ADDRESS"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP1"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP7"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "ADD"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP2"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP1"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP2"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "MSTORE"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "DUP2"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP1"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP5"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "ADD"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "SWAP1"
								},
								{
									"begin": 2650,
									"end": 2922,
									"name": "MSTORE"
								},
								{
									"begin": 2627,
									"end": 2932,
									"name": "DUP3"
								},
								{
									"begin": 2627,
									"end": 2932,
									"name": "MLOAD"
								},
								{
									"begin": 2627,
									"end": 2932,
									"name": "SWAP3"
								},
								{
									"begin": 2627,
									"end": 2932,
									"name": "ADD"
								},
								{
									"begin": 2627,
									"end": 2932,
									"name": "SWAP2"
								},
								{
									"begin": 2627,
									"end": 2932,
									"name": "SWAP1"
								},
								{
									"begin": 2627,
									"end": 2932,
									"name": "SWAP2"
								},
								{
									"begin": 2627,
									"end": 2932,
									"name": "KECCAK256"
								},
								{
									"begin": 2608,
									"end": 2624,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 2608,
									"end": 2932,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1687,
									"end": 5010,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1687,
									"end": 5010,
									"name": "DUP1"
								},
								{
									"begin": 1687,
									"end": 5010,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1687,
									"end": 5010,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 5010,
									"name": "CODECOPY"
								},
								{
									"begin": 1687,
									"end": 5010,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 5010,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582074f1f8e30194987ca530928d784062b1af319712f46511a2850ac56bae3bda6d64736f6c63430005100032",
									".code": [
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "MSTORE"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "POP"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "LT"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "SHR"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "GT"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "GT"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMP"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPDEST"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMP"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPDEST"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "EQ"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPI"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "JUMPDEST"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "DUP1"
										},
										{
											"begin": 1687,
											"end": 5010,
											"name": "REVERT"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MLOAD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP3"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MLOAD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MLOAD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP3"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP3"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP6"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "AND"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ISZERO"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPI"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP3"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SUB"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MLOAD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP4"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SUB"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "EXP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SUB"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "NOT"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "AND"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP3"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MLOAD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SUB"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "SWAP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "RETURN"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "JUMPDEST"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "DUP1"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "DUP2"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "AND"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "ADD"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "JUMPDEST"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "DUP1"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "MLOAD"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "SWAP2"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "ISZERO"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "ISZERO"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "DUP3"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "MSTORE"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "MLOAD"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "DUP2"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "SUB"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "ADD"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "SWAP1"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "RETURN"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "DUP1"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "MLOAD"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "SWAP2"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "DUP3"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "MSTORE"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "MLOAD"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "DUP2"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "SUB"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "ADD"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "SWAP1"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "RETURN"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "JUMPDEST"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "DUP1"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "DUP2"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "DUP2"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "AND"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "SWAP2"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "DUP2"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "ADD"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "SWAP1"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "SWAP2"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "AND"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "SWAP1"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "ADD"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2181,
											"end": 2289,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 2181,
											"end": 2289,
											"name": "JUMPDEST"
										},
										{
											"begin": 2181,
											"end": 2289,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2181,
											"end": 2289,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2181,
											"end": 2289,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "JUMPDEST"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "JUMPDEST"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "DUP1"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "MLOAD"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "SWAP1"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "SWAP3"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "AND"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "DUP3"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "MSTORE"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "MLOAD"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "SWAP1"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "DUP2"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "SWAP1"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "SUB"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "ADD"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "SWAP1"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "RETURN"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "JUMPDEST"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "JUMPDEST"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "DUP1"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "JUMPDEST"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "DUP1"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "AND"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "JUMPDEST"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "JUMPDEST"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "DUP1"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "DUP2"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "AND"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "SWAP1"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "ADD"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "JUMPDEST"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "DUP1"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "DUP2"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "DUP2"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "AND"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "SWAP2"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "DUP2"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "ADD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "SWAP1"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "SWAP2"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "AND"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "SWAP1"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "DUP2"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "ADD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "SWAP1"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "DUP2"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "ADD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "SWAP1"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "DUP3"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "ADD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "AND"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "SWAP1"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "DUP2"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "ADD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "SWAP1"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "ADD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "JUMPDEST"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "STOP"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "AND"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "ADD"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "AND"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMPDEST"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MLOAD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP1"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "52616D7A5377617"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "C4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "MSTORE"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "POP"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "DUP2"
										},
										{
											"begin": 1765,
											"end": 1805,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "JUMPDEST"
										},
										{
											"begin": 3817,
											"end": 3821,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3869,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3842,
											"end": 3852,
											"name": "CALLER"
										},
										{
											"begin": 3854,
											"end": 3861,
											"name": "DUP5"
										},
										{
											"begin": 3863,
											"end": 3868,
											"name": "DUP5"
										},
										{
											"begin": 3833,
											"end": 3841,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3833,
											"end": 3869,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3833,
											"end": 3869,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 3833,
											"end": 3869,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3886,
											"end": 3890,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "JUMPDEST"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "SWAP3"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "SWAP2"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "POP"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "POP"
										},
										{
											"begin": 3753,
											"end": 3897,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "JUMPDEST"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "SLOAD"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "DUP2"
										},
										{
											"begin": 1895,
											"end": 1919,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "DUP4"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "AND"
										},
										{
											"begin": 4123,
											"end": 4127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "SWAP1"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "DUP2"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "MSTORE"
										},
										{
											"begin": 4143,
											"end": 4152,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "SWAP1"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "DUP2"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "MSTORE"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "DUP1"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "DUP4"
										},
										{
											"begin": 4143,
											"end": 4158,
											"name": "KECCAK256"
										},
										{
											"begin": 4159,
											"end": 4169,
											"name": "CALLER"
										},
										{
											"begin": 4143,
											"end": 4170,
											"name": "DUP5"
										},
										{
											"begin": 4143,
											"end": 4170,
											"name": "MSTORE"
										},
										{
											"begin": 4143,
											"end": 4170,
											"name": "SWAP1"
										},
										{
											"begin": 4143,
											"end": 4170,
											"name": "SWAP2"
										},
										{
											"begin": 4143,
											"end": 4170,
											"name": "MSTORE"
										},
										{
											"begin": 4143,
											"end": 4170,
											"name": "DUP2"
										},
										{
											"begin": 4143,
											"end": 4170,
											"name": "KECCAK256"
										},
										{
											"begin": 4143,
											"end": 4170,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4143,
											"end": 4182,
											"name": "EQ"
										},
										{
											"begin": 4139,
											"end": 4277,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 4139,
											"end": 4277,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "DUP5"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "AND"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "SWAP1"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "DUP2"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "MSTORE"
										},
										{
											"begin": 4228,
											"end": 4237,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "SWAP1"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "DUP2"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "MSTORE"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "DUP1"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "DUP4"
										},
										{
											"begin": 4228,
											"end": 4243,
											"name": "KECCAK256"
										},
										{
											"begin": 4244,
											"end": 4254,
											"name": "CALLER"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "DUP5"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "MSTORE"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "SWAP1"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "SWAP2"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "MSTORE"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "SWAP1"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "KECCAK256"
										},
										{
											"begin": 4228,
											"end": 4255,
											"name": "SLOAD"
										},
										{
											"begin": 4228,
											"end": 4266,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 4228,
											"end": 4266,
											"name": "SWAP1"
										},
										{
											"begin": 4260,
											"end": 4265,
											"name": "DUP4"
										},
										{
											"begin": 4228,
											"end": 4266,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 4228,
											"end": 4259,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 4228,
											"end": 4266,
											"name": "AND"
										},
										{
											"begin": 4228,
											"end": 4266,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4228,
											"end": 4266,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 4228,
											"end": 4266,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP6"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "AND"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP2"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "MSTORE"
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP2"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "MSTORE"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP1"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP4"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "KECCAK256"
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "CALLER"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "DUP5"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "MSTORE"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "SWAP2"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "MSTORE"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "SWAP1"
										},
										{
											"begin": 4198,
											"end": 4225,
											"name": "KECCAK256"
										},
										{
											"begin": 4198,
											"end": 4266,
											"name": "SSTORE"
										},
										{
											"begin": 4139,
											"end": 4277,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 4139,
											"end": 4277,
											"name": "JUMPDEST"
										},
										{
											"begin": 4286,
											"end": 4312,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 4296,
											"end": 4300,
											"name": "DUP5"
										},
										{
											"begin": 4302,
											"end": 4304,
											"name": "DUP5"
										},
										{
											"begin": 4306,
											"end": 4311,
											"name": "DUP5"
										},
										{
											"begin": 4286,
											"end": 4295,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 4286,
											"end": 4312,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4286,
											"end": 4312,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 4286,
											"end": 4312,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4329,
											"end": 4333,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "SWAP4"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "SWAP3"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "POP"
										},
										{
											"begin": 4045,
											"end": 4340,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2181,
											"end": 2289,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2181,
											"end": 2289,
											"name": "JUMPDEST"
										},
										{
											"begin": 2223,
											"end": 2289,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 2181,
											"end": 2289,
											"name": "DUP2"
										},
										{
											"begin": 2181,
											"end": 2289,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "JUMPDEST"
										},
										{
											"begin": 1887,
											"end": 1889,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "DUP2"
										},
										{
											"begin": 1854,
											"end": 1889,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "JUMPDEST"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "SLOAD"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "DUP2"
										},
										{
											"begin": 2040,
											"end": 2071,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "JUMPDEST"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "MSTORE"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "MSTORE"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "KECCAK256"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "SLOAD"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1966,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "JUMPDEST"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "MSTORE"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "SWAP1"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "DUP2"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "MSTORE"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "SWAP1"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "KECCAK256"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "SLOAD"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "DUP2"
										},
										{
											"begin": 2295,
											"end": 2333,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "JUMPDEST"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "MLOAD"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "DUP1"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "ADD"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "MSTORE"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "DUP1"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "DUP2"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "MSTORE"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "2926AD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "DUP2"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "MSTORE"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "POP"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "DUP2"
										},
										{
											"begin": 1811,
											"end": 1848,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 3903,
											"end": 4039,
											"name": "JUMPDEST"
										},
										{
											"begin": 3963,
											"end": 3967,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3979,
											"end": 4011,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 3989,
											"end": 3999,
											"name": "CALLER"
										},
										{
											"begin": 4001,
											"end": 4003,
											"name": "DUP5"
										},
										{
											"begin": 4005,
											"end": 4010,
											"name": "DUP5"
										},
										{
											"begin": 3979,
											"end": 3988,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3979,
											"end": 4011,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "JUMPDEST"
										},
										{
											"begin": 4491,
											"end": 4506,
											"name": "TIMESTAMP"
										},
										{
											"begin": 4479,
											"end": 4487,
											"name": "DUP5"
										},
										{
											"begin": 4479,
											"end": 4506,
											"name": "LT"
										},
										{
											"begin": 4479,
											"end": 4506,
											"name": "ISZERO"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "JUMPI"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "DUP1"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "DUP2"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "MSTORE"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "DUP3"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "ADD"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "MSTORE"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "DUP3"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "ADD"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "155B9A5CDDD85C158C8E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "DUP3"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "ADD"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "MSTORE"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "SWAP1"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "MLOAD"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "SWAP1"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "DUP2"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "SWAP1"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "SUB"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "ADD"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "SWAP1"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "REVERT"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 4471,
											"end": 4529,
											"name": "JUMPDEST"
										},
										{
											"begin": 4641,
											"end": 4657,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 4641,
											"end": 4657,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "DUP1"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "DUP10"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "AND"
										},
										{
											"begin": 4539,
											"end": 4553,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "DUP2"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "DUP2"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4736,
											"end": 4742,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "SWAP1"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "DUP2"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "MSTORE"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "DUP1"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "DUP4"
										},
										{
											"begin": 4736,
											"end": 4749,
											"name": "KECCAK256"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "DUP1"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "SLOAD"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "DUP1"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "DUP3"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "ADD"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "SWAP1"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "SWAP3"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "SSTORE"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP3"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "MLOAD"
										},
										{
											"begin": 2223,
											"end": 2289,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP2"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP7"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "ADD"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "MSTORE"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP1"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP5"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "ADD"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "SWAP7"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "SWAP1"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "SWAP7"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "MSTORE"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "SWAP6"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP14"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "AND"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP7"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "ADD"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "MSTORE"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP6"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "ADD"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP13"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "SWAP1"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "MSTORE"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP6"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "ADD"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "SWAP6"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "SWAP1"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "SWAP6"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "MSTORE"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP1"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP6"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "ADD"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP12"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "SWAP1"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "MSTORE"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP2"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP6"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "ADD"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "DUP3"
										},
										{
											"begin": 4685,
											"end": 4762,
											"name": "MSTORE"
										},
										{
											"begin": 4675,
											"end": 4763,
											"name": "DUP1"
										},
										{
											"begin": 4675,
											"end": 4763,
											"name": "MLOAD"
										},
										{
											"begin": 4675,
											"end": 4763,
											"name": "SWAP1"
										},
										{
											"begin": 4675,
											"end": 4763,
											"name": "DUP4"
										},
										{
											"begin": 4675,
											"end": 4763,
											"name": "ADD"
										},
										{
											"begin": 4675,
											"end": 4763,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "DUP7"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "ADD"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "MSTORE"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "DUP6"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "ADD"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "SWAP7"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "SWAP1"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "SWAP7"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "MSTORE"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "DUP1"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "DUP6"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "ADD"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "SWAP7"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "SWAP1"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "SWAP7"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "MSTORE"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "DUP1"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "DUP5"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "ADD"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "DUP1"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "DUP3"
										},
										{
											"begin": 4579,
											"end": 4777,
											"name": "MSTORE"
										},
										{
											"begin": 4556,
											"end": 4787,
											"name": "DUP7"
										},
										{
											"begin": 4556,
											"end": 4787,
											"name": "MLOAD"
										},
										{
											"begin": 4556,
											"end": 4787,
											"name": "SWAP7"
										},
										{
											"begin": 4556,
											"end": 4787,
											"name": "DUP4"
										},
										{
											"begin": 4556,
											"end": 4787,
											"name": "ADD"
										},
										{
											"begin": 4556,
											"end": 4787,
											"name": "SWAP7"
										},
										{
											"begin": 4556,
											"end": 4787,
											"name": "SWAP1"
										},
										{
											"begin": 4556,
											"end": 4787,
											"name": "SWAP7"
										},
										{
											"begin": 4556,
											"end": 4787,
											"name": "KECCAK256"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP6"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP4"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP1"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "MSTORE"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP5"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP1"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP3"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "MSTORE"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP7"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP1"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "MSTORE"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP10"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "AND"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP6"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "MSTORE"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP5"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP9"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP1"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "MSTORE"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP5"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP8"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP1"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "MSTORE"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "MLOAD"
										},
										{
											"begin": 4539,
											"end": 4553,
											"name": "SWAP2"
										},
										{
											"begin": 4539,
											"end": 4553,
											"name": "SWAP4"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "SWAP3"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP1"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP3"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP2"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP3"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "DUP2"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP1"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SUB"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP1"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP2"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP1"
										},
										{
											"begin": 4736,
											"end": 4751,
											"name": "DUP6"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "GAS"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "STATICCALL"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "ADD"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "MLOAD"
										},
										{
											"begin": 4824,
											"end": 4850,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "DUP2"
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "AND"
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "ISZERO"
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "DUP1"
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "ISZERO"
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "SWAP1"
										},
										{
											"begin": 4868,
											"end": 4927,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 4868,
											"end": 4927,
											"name": "JUMPI"
										},
										{
											"begin": 4868,
											"end": 4927,
											"name": "POP"
										},
										{
											"begin": 4922,
											"end": 4927,
											"name": "DUP9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4902,
											"end": 4927,
											"name": "AND"
										},
										{
											"begin": 4902,
											"end": 4918,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 4902,
											"end": 4927,
											"name": "AND"
										},
										{
											"begin": 4902,
											"end": 4927,
											"name": "EQ"
										},
										{
											"begin": 4868,
											"end": 4927,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 4868,
											"end": 4927,
											"name": "JUMPDEST"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "JUMPI"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "DUP1"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "DUP2"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "MSTORE"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "DUP3"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "ADD"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "MSTORE"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "DUP3"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "ADD"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "MSTORE"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "PUSH",
											"value": "556E697377617056323A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "DUP3"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "ADD"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "MSTORE"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "SWAP1"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "MLOAD"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "SWAP1"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "DUP2"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "SWAP1"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "SUB"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "ADD"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "SWAP1"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "REVERT"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 4860,
											"end": 4960,
											"name": "JUMPDEST"
										},
										{
											"begin": 4970,
											"end": 5001,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 4979,
											"end": 4984,
											"name": "DUP10"
										},
										{
											"begin": 4986,
											"end": 4993,
											"name": "DUP10"
										},
										{
											"begin": 4995,
											"end": 5000,
											"name": "DUP10"
										},
										{
											"begin": 4970,
											"end": 4978,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 4970,
											"end": 5001,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 4970,
											"end": 5001,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 4970,
											"end": 5001,
											"name": "JUMPDEST"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "POP"
										},
										{
											"begin": 4346,
											"end": 5008,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "JUMPDEST"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "MSTORE"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "SWAP3"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "DUP4"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "MSTORE"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "DUP1"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "DUP5"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "KECCAK256"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "SWAP2"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "MSTORE"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "DUP3"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "MSTORE"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "SWAP1"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "KECCAK256"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "SLOAD"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "DUP2"
										},
										{
											"begin": 1972,
											"end": 2033,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 3359,
											"end": 3525,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 3359,
											"end": 3525,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "DUP1"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "DUP5"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "AND"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "DUP2"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "DUP2"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "MSTORE"
										},
										{
											"begin": 3439,
											"end": 3448,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "SWAP1"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "DUP2"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "MSTORE"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "DUP1"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "DUP4"
										},
										{
											"begin": 3439,
											"end": 3455,
											"name": "KECCAK256"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "SWAP5"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "DUP8"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "AND"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "DUP1"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "DUP5"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "MSTORE"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "SWAP5"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "DUP3"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "MSTORE"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "SWAP2"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "DUP3"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "SWAP1"
										},
										{
											"begin": 3439,
											"end": 3464,
											"name": "KECCAK256"
										},
										{
											"begin": 3439,
											"end": 3472,
											"name": "DUP6"
										},
										{
											"begin": 3439,
											"end": 3472,
											"name": "SWAP1"
										},
										{
											"begin": 3439,
											"end": 3472,
											"name": "SSTORE"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "DUP2"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "MLOAD"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "DUP6"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "DUP2"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "MSTORE"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "SWAP2"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "MLOAD"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "SWAP3"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "DUP2"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "SWAP1"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "SUB"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "SWAP1"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "SWAP2"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "ADD"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "SWAP1"
										},
										{
											"begin": 3487,
											"end": 3518,
											"name": "LOG3"
										},
										{
											"begin": 3359,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 3359,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 3359,
											"end": 3525,
											"name": "POP"
										},
										{
											"begin": 3359,
											"end": 3525,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1410,
											"end": 1537,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 1410,
											"end": 1537,
											"name": "JUMPDEST"
										},
										{
											"begin": 1493,
											"end": 1498,
											"name": "DUP1"
										},
										{
											"begin": 1493,
											"end": 1498,
											"name": "DUP3"
										},
										{
											"begin": 1493,
											"end": 1498,
											"name": "SUB"
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "DUP3"
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "DUP2"
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "GT"
										},
										{
											"begin": 1488,
											"end": 1504,
											"name": "ISZERO"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "JUMPI"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "DUP1"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "DUP2"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "MSTORE"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "DUP3"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "ADD"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "MSTORE"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "DUP3"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "ADD"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "DUP3"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "ADD"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "MSTORE"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "SWAP1"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "MLOAD"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "SWAP1"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "DUP2"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "SWAP1"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "SUB"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "ADD"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "SWAP1"
										},
										{
											"begin": 1480,
											"end": 1530,
											"name": "REVERT"
										},
										{
											"begin": 3531,
											"end": 3747,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 3531,
											"end": 3747,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "DUP4"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "AND"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "SWAP1"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "DUP2"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "MSTORE"
										},
										{
											"begin": 3624,
											"end": 3633,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "MSTORE"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "SWAP1"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "KECCAK256"
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "SLOAD"
										},
										{
											"begin": 3624,
											"end": 3650,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 3624,
											"end": 3650,
											"name": "SWAP1"
										},
										{
											"begin": 3644,
											"end": 3649,
											"name": "DUP3"
										},
										{
											"begin": 3624,
											"end": 3650,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3624,
											"end": 3643,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3624,
											"end": 3650,
											"name": "AND"
										},
										{
											"begin": 3624,
											"end": 3650,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3624,
											"end": 3650,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 3624,
											"end": 3650,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "DUP1"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "DUP6"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "AND"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "SWAP1"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "DUP2"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "MSTORE"
										},
										{
											"begin": 3606,
											"end": 3615,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "MSTORE"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "DUP1"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "DUP3"
										},
										{
											"begin": 3606,
											"end": 3621,
											"name": "KECCAK256"
										},
										{
											"begin": 3606,
											"end": 3650,
											"name": "SWAP4"
										},
										{
											"begin": 3606,
											"end": 3650,
											"name": "SWAP1"
										},
										{
											"begin": 3606,
											"end": 3650,
											"name": "SWAP4"
										},
										{
											"begin": 3606,
											"end": 3650,
											"name": "SSTORE"
										},
										{
											"begin": 3676,
											"end": 3689,
											"name": "SWAP1"
										},
										{
											"begin": 3676,
											"end": 3689,
											"name": "DUP5"
										},
										{
											"begin": 3676,
											"end": 3689,
											"name": "AND"
										},
										{
											"begin": 3676,
											"end": 3689,
											"name": "DUP2"
										},
										{
											"begin": 3676,
											"end": 3689,
											"name": "MSTORE"
										},
										{
											"begin": 3676,
											"end": 3689,
											"name": "KECCAK256"
										},
										{
											"begin": 3676,
											"end": 3689,
											"name": "SLOAD"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "SWAP1"
										},
										{
											"begin": 3694,
											"end": 3699,
											"name": "DUP3"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3676,
											"end": 3693,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "AND"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 3676,
											"end": 3700,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "DUP1"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "DUP5"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "AND"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "DUP2"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "DUP2"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "MSTORE"
										},
										{
											"begin": 3660,
											"end": 3669,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "SWAP1"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "DUP2"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "MSTORE"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "SWAP2"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "DUP3"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "SWAP1"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "KECCAK256"
										},
										{
											"begin": 3660,
											"end": 3700,
											"name": "SWAP5"
										},
										{
											"begin": 3660,
											"end": 3700,
											"name": "SWAP1"
										},
										{
											"begin": 3660,
											"end": 3700,
											"name": "SWAP5"
										},
										{
											"begin": 3660,
											"end": 3700,
											"name": "SSTORE"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "DUP1"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "MLOAD"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "DUP6"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "DUP2"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "MSTORE"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "SWAP1"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "MLOAD"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "SWAP2"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "SWAP4"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "SWAP3"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "DUP8"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "AND"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "SWAP3"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "SWAP3"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "SWAP2"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "DUP3"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "SWAP1"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "SUB"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "ADD"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "SWAP1"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "LOG3"
										},
										{
											"begin": 3531,
											"end": 3747,
											"name": "POP"
										},
										{
											"begin": 3531,
											"end": 3747,
											"name": "POP"
										},
										{
											"begin": 3531,
											"end": 3747,
											"name": "POP"
										},
										{
											"begin": 3531,
											"end": 3747,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1278,
											"end": 1404,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 1278,
											"end": 1404,
											"name": "JUMPDEST"
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "DUP1"
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "DUP3"
										},
										{
											"begin": 1361,
											"end": 1366,
											"name": "ADD"
										},
										{
											"begin": 1356,
											"end": 1372,
											"name": "DUP3"
										},
										{
											"begin": 1356,
											"end": 1372,
											"name": "DUP2"
										},
										{
											"begin": 1356,
											"end": 1372,
											"name": "LT"
										},
										{
											"begin": 1356,
											"end": 1372,
											"name": "ISZERO"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "JUMPI"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "DUP1"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "DUP2"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "MSTORE"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "DUP3"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "ADD"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "MSTORE"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "DUP3"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "ADD"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "DUP3"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "ADD"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "MSTORE"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "MLOAD"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "DUP2"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "SUB"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "ADD"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "SWAP1"
										},
										{
											"begin": 1348,
											"end": 1397,
											"name": "REVERT"
										}
									]
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"RamzSwap V2/Ramz.sol\":\"RamzSwapToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RamzSwap V2/Ramz.sol\":{\"keccak256\":\"0x3a20ece75da78d03adf220a4c6a9618f7adf6eaab91107f0fc16b1d636d68210\",\"urls\":[\"bzz-raw://96d86896bc01c6059d0d122ce7862e7b1a9550fb0781a2bdde8ecc33d4694e42\",\"dweb:/ipfs/QmdZg1YBU6xntGMKN6EAkahxXBWHHS4NAGLJMbQcEhsjtx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 206,
								"contract": "RamzSwap V2/Ramz.sol:RamzSwapToken",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 210,
								"contract": "RamzSwap V2/Ramz.sol:RamzSwapToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 216,
								"contract": "RamzSwap V2/Ramz.sol:RamzSwapToken",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 218,
								"contract": "RamzSwap V2/Ramz.sol:RamzSwapToken",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 225,
								"contract": "RamzSwap V2/Ramz.sol:RamzSwapToken",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"RamzSwap V2/Ramz.sol\":1255:1685  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"RamzSwap V2/Ramz.sol\":1255:1685  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820429bd0e74ec9e1c2093cd0a4bac4fe98b2fb5a82ec4badc1c26650962035f10064736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820429bd0e74ec9e1c2093cd0a4bac4fe98b2fb5a82ec4badc1c26650962035f10064736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 TIMESTAMP SWAP12 0xD0 0xE7 0x4E 0xC9 0xE1 0xC2 MULMOD EXTCODECOPY 0xD0 LOG4 0xBA 0xC4 INVALID SWAP9 0xB2 0xFB GAS DUP3 0xEC 0x4B 0xAD 0xC1 0xC2 PUSH7 0x50962035F10064 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "1255:430:0:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820429bd0e74ec9e1c2093cd0a4bac4fe98b2fb5a82ec4badc1c26650962035f10064736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 TIMESTAMP SWAP12 0xD0 0xE7 0x4E 0xC9 0xE1 0xC2 MULMOD EXTCODECOPY 0xD0 LOG4 0xBA 0xC4 INVALID SWAP9 0xB2 0xFB GAS DUP3 0xEC 0x4B 0xAD 0xC1 0xC2 PUSH7 0x50962035F10064 PUSH20 0x6F6C634300051000320000000000000000000000 ",
							"sourceMap": "1255:430:0:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1255,
									"end": 1685,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1255,
									"end": 1685,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820429bd0e74ec9e1c2093cd0a4bac4fe98b2fb5a82ec4badc1c26650962035f10064736f6c63430005100032",
									".code": [
										{
											"begin": 1255,
											"end": 1685,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 1255,
											"end": 1685,
											"name": "ADDRESS"
										},
										{
											"begin": 1255,
											"end": 1685,
											"name": "EQ"
										},
										{
											"begin": 1255,
											"end": 1685,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1255,
											"end": 1685,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1255,
											"end": 1685,
											"name": "MSTORE"
										},
										{
											"begin": 1255,
											"end": 1685,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1685,
											"name": "DUP1"
										},
										{
											"begin": 1255,
											"end": 1685,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"RamzSwap V2/Ramz.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"RamzSwap V2/Ramz.sol\":{\"keccak256\":\"0x3a20ece75da78d03adf220a4c6a9618f7adf6eaab91107f0fc16b1d636d68210\",\"urls\":[\"bzz-raw://96d86896bc01c6059d0d122ce7862e7b1a9550fb0781a2bdde8ecc33d4694e42\",\"dweb:/ipfs/QmdZg1YBU6xntGMKN6EAkahxXBWHHS4NAGLJMbQcEhsjtx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"RamzSwap V2/Ramz.sol": {
				"ast": {
					"absolutePath": "RamzSwap V2/Ramz.sol",
					"exportedSymbols": {
						"IRamzSwapMAAL20": [
							117
						],
						"RamzSwapToken": [
							571
						],
						"SafeMath": [
							190
						]
					},
					"id": 572,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IRamzSwapMAAL20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 9,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "73:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "96:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "96:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "121:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "72:60:0"
									},
									"src": "58:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 17,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "153:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "175:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "195:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "195:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "152:54:0"
									},
									"src": "138:69:0"
								},
								{
									"body": null,
									"documentation": null,
									"id": 22,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "252:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 19,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "252:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "251:15:0"
									},
									"scope": 117,
									"src": "213:54:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 27,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 27,
												"src": "313:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 24,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "313:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "312:15:0"
									},
									"scope": 117,
									"src": "272:56:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "376:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 29,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "376:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "375:7:0"
									},
									"scope": 117,
									"src": "333:50:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:6:0"
									},
									"scope": 117,
									"src": "388:52:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "464:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:15:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "502:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "501:6:0"
									},
									"scope": 117,
									"src": "445:63:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "532:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "547:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:32:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "587:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "586:6:0"
									},
									"scope": 117,
									"src": "513:80:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 62,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "616:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "633:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "615:29:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "663:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 59,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:6:0"
									},
									"scope": 117,
									"src": "599:70:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "692:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "704:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:24:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "734:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:6:0"
									},
									"scope": 117,
									"src": "674:66:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "767:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "781:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "793:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:38:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "823:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 79,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:6:0"
									},
									"scope": 117,
									"src": "745:84:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "886:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 84,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "885:9:0"
									},
									"scope": 117,
									"src": "835:60:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:2:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "950:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 89,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:9:0"
									},
									"scope": 117,
									"src": "900:59:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "980:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "979:15:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1018:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1018:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1017:6:0"
									},
									"scope": 117,
									"src": "964:60:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1046:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1061:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1078:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1078:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1090:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1090:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1105:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 108,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1105:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1114:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "1125:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:90:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:0"
									},
									"scope": 117,
									"src": "1030:115:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 572,
							"src": "26:1121:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "1338:66:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 127,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 124,
																			"src": "1357:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 128,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 119,
																				"src": "1361:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 129,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "1365:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1361:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1357:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 132,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1356:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 133,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "1371:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1356:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1374:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															589,
															590
														],
														"referencedDeclaration": 590,
														"src": "1348:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1348:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1348:49:0"
											}
										]
									},
									"documentation": null,
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1291:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1291:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1299:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1290:16:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "1330:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1330:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1329:8:0"
									},
									"scope": 190,
									"src": "1278:126:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "1470:67:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 153,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 149,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 146,
																			"src": "1489:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 150,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 141,
																				"src": "1493:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 151,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 143,
																				"src": "1497:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1493:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1489:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 154,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1488:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 155,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "1503:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1488:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1506:23:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															589,
															590
														],
														"referencedDeclaration": 590,
														"src": "1480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1480:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1480:50:0"
											}
										]
									},
									"documentation": null,
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1423:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1423:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1431:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1431:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1422:16:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "1462:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1462:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1461:8:0"
									},
									"scope": 190,
									"src": "1410:127:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1603:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 171,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 165,
																	"src": "1621:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1626:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1621:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 174,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 168,
																					"src": "1632:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 177,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 175,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 163,
																						"src": "1636:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 176,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 165,
																						"src": "1640:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1636:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1632:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 179,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1631:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 180,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "1645:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1631:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 182,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 163,
																	"src": "1650:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1631:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1621:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1653:22:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															589,
															590
														],
														"referencedDeclaration": 590,
														"src": "1613:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1613:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "1613:63:0"
											}
										]
									},
									"documentation": null,
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1556:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1556:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1564:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1564:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1555:16:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1595:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1594:8:0"
									},
									"scope": 190,
									"src": "1543:140:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 572,
							"src": "1255:430:0"
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 191,
										"name": "IRamzSwapMAAL20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 117,
										"src": "1713:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IRamzSwapMAAL20_$117",
											"typeString": "contract IRamzSwapMAAL20"
										}
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "1713:15:0"
								}
							],
							"contractDependencies": [
								117
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 571,
							"linearizedBaseContracts": [
								571,
								117
							],
							"name": "RamzSwapToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 195,
									"libraryName": {
										"contractScope": null,
										"id": 193,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 190,
										"src": "1741:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$190",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1735:24:0",
									"typeName": {
										"id": 194,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1754:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 198,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "1765:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 196,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1765:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "52616d7a53776170",
										"id": 197,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1795:10:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_0fdad714b9ded567f809e1228e3c4209948d0b55cf816b97124955a286699019",
											"typeString": "literal_string \"RamzSwap\""
										},
										"value": "RamzSwap"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 201,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "1811:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 199,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1811:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "524d5a",
										"id": 200,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1843:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_81f616c1201a5c936a13695c05eef8232632fc299f260ac3a95309c47893255d",
											"typeString": "literal_string \"RMZ\""
										},
										"value": "RMZ"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 204,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "1854:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 202,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1854:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 203,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1887:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 206,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "1895:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 205,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1895:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 210,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "1925:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 209,
										"keyType": {
											"id": 207,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1933:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1925:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 208,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1944:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 216,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "1972:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 215,
										"keyType": {
											"id": 211,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1980:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1972:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 214,
											"keyType": {
												"id": 212,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1999:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1991:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 213,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2010:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 218,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "2040:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 217,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2040:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 221,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "2181:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 219,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2181:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 220,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2223:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 225,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 571,
									"src": "2295:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 224,
										"keyType": {
											"id": 222,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2303:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2295:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 223,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2314:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 233,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2355:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2378:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2378:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "2403:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2403:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2354:60:0"
									},
									"src": "2340:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 241,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2435:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2457:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2477:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 238,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2477:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2434:54:0"
									},
									"src": "2420:69:0"
								},
								{
									"body": {
										"id": 273,
										"nodeType": "Block",
										"src": "2516:423:0",
										"statements": [
											{
												"assignments": [
													245
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 273,
														"src": "2526:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 244,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2526:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2526:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 245,
															"isOffset": false,
															"isSlot": false,
															"src": "2571:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 247,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "2548:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 248,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "2608:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2688:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 252,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "2678:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2678:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 257,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 198,
																						"src": "2807:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2801:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 258,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2801:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 255,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "2791:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2791:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 262,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2847:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 261,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2841:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2841:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 260,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "2831:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2831:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 265,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 245,
																		"src": "2870:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 267,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 604,
																				"src": "2903:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_RamzSwapToken_$571",
																					"typeString": "contract RamzSwapToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_RamzSwapToken_$571",
																					"typeString": "contract RamzSwapToken"
																				}
																			],
																			"id": 266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2895:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2895:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 250,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 573,
																		"src": "2650:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2650:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2650:272:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 249,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "2627:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2627:305:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2608:324:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "2608:324:0"
											}
										]
									},
									"documentation": null,
									"id": 274,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2506:2:0"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:0"
									},
									"scope": 571,
									"src": "2495:444:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "2993:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 281,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3003:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 284,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "3033:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 282,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "3017:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 139,
															"src": "3017:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3017:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3003:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "3003:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 288,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3049:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 290,
														"indexExpression": {
															"argumentTypes": null,
															"id": 289,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "3059:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3049:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 295,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "3083:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 291,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "3065:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 293,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 292,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "3075:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3065:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 139,
															"src": "3065:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3049:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "3049:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3121:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3113:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3113:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 303,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "3125:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 304,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "3129:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															241
														],
														"referencedDeclaration": 241,
														"src": "3104:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3104:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 306,
												"nodeType": "EmitStatement",
												"src": "3099:36:0"
											}
										]
									},
									"documentation": null,
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2960:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2960:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2972:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2972:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2959:24:0"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2993:0:0"
									},
									"scope": 571,
									"src": "2945:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "3198:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 315,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3208:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 317,
														"indexExpression": {
															"argumentTypes": null,
															"id": 316,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3218:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3208:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 322,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "3246:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 318,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "3226:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "3236:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3226:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 161,
															"src": "3226:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3226:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3208:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "3208:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 326,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "3262:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 329,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "3292:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 327,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "3276:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 161,
															"src": "3276:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3276:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3262:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "3262:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "3322:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3336:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3328:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3328:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 338,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "3340:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															241
														],
														"referencedDeclaration": 241,
														"src": "3313:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3313:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "EmitStatement",
												"src": "3308:38:0"
											}
										]
									},
									"documentation": null,
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3163:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "3177:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3162:26:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3198:0:0"
									},
									"scope": 571,
									"src": "3148:205:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "3429:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 351,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "3439:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 354,
															"indexExpression": {
																"argumentTypes": null,
																"id": 352,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 344,
																"src": "3449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3439:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 355,
														"indexExpression": {
															"argumentTypes": null,
															"id": 353,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3456:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3439:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 356,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "3467:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3439:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 358,
												"nodeType": "ExpressionStatement",
												"src": "3439:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 360,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3496:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 361,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "3503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 362,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "3512:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 359,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															233
														],
														"referencedDeclaration": 233,
														"src": "3487:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3487:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "EmitStatement",
												"src": "3482:36:0"
											}
										]
									},
									"documentation": null,
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "3377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "3392:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3392:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "3409:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3409:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3376:44:0"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3429:0:0"
									},
									"scope": 571,
									"src": "3359:166:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "3596:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 375,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3606:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 377,
														"indexExpression": {
															"argumentTypes": null,
															"id": 376,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3616:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3606:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 382,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "3644:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 378,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "3624:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 380,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 379,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "3634:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3624:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 161,
															"src": "3624:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3624:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3606:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "3606:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 386,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "3660:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 388,
														"indexExpression": {
															"argumentTypes": null,
															"id": 387,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3670:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3660:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 393,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "3694:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 389,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "3676:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 391,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 390,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 370,
																	"src": "3686:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3676:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 139,
															"src": "3676:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3676:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3660:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "3660:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 398,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3724:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 399,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "3730:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 400,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3734:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															241
														],
														"referencedDeclaration": 241,
														"src": "3715:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 402,
												"nodeType": "EmitStatement",
												"src": "3710:30:0"
											}
										]
									},
									"documentation": null,
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3550:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3550:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3564:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "3576:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3549:38:0"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3596:0:0"
									},
									"scope": 571,
									"src": "3531:216:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "3823:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 414,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "3842:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3842:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 416,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "3854:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 417,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "3863:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "3833:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3833:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "3833:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3886:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 412,
												"id": 421,
												"nodeType": "Return",
												"src": "3879:11:0"
											}
										]
									},
									"documentation": null,
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3770:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3787:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3787:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3769:29:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3817:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3817:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3816:6:0"
									},
									"scope": 571,
									"src": "3753:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 62,
									"visibility": "external"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3969:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 433,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "3989:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3989:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4001:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 436,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "4005:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 432,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "3979:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3979:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "3979:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4028:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 431,
												"id": 440,
												"nodeType": "Return",
												"src": "4021:11:0"
											}
										]
									},
									"documentation": null,
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3921:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3921:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3933:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3933:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3920:24:0"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3963:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3962:6:0"
									},
									"scope": 571,
									"src": "3903:136:0",
									"stateMutability": "nonpayable",
									"superFunction": 71,
									"visibility": "external"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "4129:211:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 453,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "4143:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 455,
															"indexExpression": {
																"argumentTypes": null,
																"id": 454,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "4153:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4143:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 458,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 456,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 586,
																"src": "4159:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4159:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4143:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "4179:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4180:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4174:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4174:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4143:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 482,
												"nodeType": "IfStatement",
												"src": "4139:138:0",
												"trueBody": {
													"id": 481,
													"nodeType": "Block",
													"src": "4184:93:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 464,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 216,
																			"src": "4198:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 468,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 465,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 444,
																			"src": "4208:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4198:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 469,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 466,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "4214:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4214:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4198:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 477,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 448,
																			"src": "4260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 470,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 216,
																					"src": "4228:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 472,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 471,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 444,
																					"src": "4238:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4228:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 475,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 473,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 586,
																					"src": "4244:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 474,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "4244:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4228:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 161,
																		"src": "4228:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4228:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4198:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 480,
															"nodeType": "ExpressionStatement",
															"src": "4198:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 484,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "4296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 485,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4302:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 486,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "4306:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 483,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "4286:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4286:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "4286:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4329:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 452,
												"id": 490,
												"nodeType": "Return",
												"src": "4322:11:0"
											}
										]
									},
									"documentation": null,
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "4067:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "4081:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4081:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "4093:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4093:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4066:38:0"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "4123:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4123:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4122:6:0"
									},
									"scope": 571,
									"src": "4045:295:0",
									"stateMutability": "nonpayable",
									"superFunction": 82,
									"visibility": "external"
								},
								{
									"body": {
										"id": 569,
										"nodeType": "Block",
										"src": "4461:547:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 510,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "4479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 511,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 576,
																	"src": "4491:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4491:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4479:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a2045585049524544",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4508:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															},
															"value": "UniswapV2: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47797eaaf6df6dc2efdb1e824209400a8293aff4c1e7f6d90fcc4b3e3ba18a87",
																"typeString": "literal_string \"UniswapV2: EXPIRED\""
															}
														],
														"id": 509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															589,
															590
														],
														"referencedDeclaration": 590,
														"src": "4471:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4471:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "4471:58:0"
											},
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "4539:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 517,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4539:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 540,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4613:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 523,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "4641:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 527,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 221,
																					"src": "4696:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 528,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 494,
																					"src": "4713:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 529,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "4720:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 530,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "4729:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 534,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "4736:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 531,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 225,
																							"src": "4736:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 533,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 532,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 494,
																							"src": "4743:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "4736:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 535,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "4753:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 525,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 573,
																					"src": "4685:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "4685:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4685:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 524,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 580,
																		"src": "4675:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4675:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 520,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "4579:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4579:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4579:198:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 519,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "4556:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4556:231:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:248:0"
											},
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 569,
														"src": "4797:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 541,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4797:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 544,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 518,
															"src": "4834:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 545,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "4842:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 546,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "4845:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 547,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "4848:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 543,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "4824:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4824:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4797:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 551,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4868:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4896:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4888:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4888:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "4868:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 556,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4902:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 557,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 494,
																	"src": "4922:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4902:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4868:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "556e697377617056323a20494e56414c49445f5349474e4154555245",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4929:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															},
															"value": "UniswapV2: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d893fc9f5fa2494c39ecec82df2778b33226458ccce3b9a56f5372437d54a56",
																"typeString": "literal_string \"UniswapV2: INVALID_SIGNATURE\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															589,
															590
														],
														"referencedDeclaration": 590,
														"src": "4860:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4860:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "4860:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 564,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4979:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 565,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4986:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 566,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4995:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "4970:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4970:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "4970:31:0"
											}
										]
									},
									"documentation": null,
									"id": 570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4362:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4377:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4394:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4394:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4406:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4421:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 501,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4421:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4430:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 503,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4430:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4441:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 505,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4361:90:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4461:0:0"
									},
									"scope": 571,
									"src": "4346:662:0",
									"stateMutability": "nonpayable",
									"superFunction": 116,
									"visibility": "external"
								}
							],
							"scope": 572,
							"src": "1687:3323:0"
						}
					],
					"src": "0:5010:0"
				},
				"id": 0
			}
		}
	}
}